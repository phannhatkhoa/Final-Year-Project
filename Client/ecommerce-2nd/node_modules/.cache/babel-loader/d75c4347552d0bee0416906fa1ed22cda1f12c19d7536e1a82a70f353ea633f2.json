{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tai Lieu Cac Mon\\\\New folder\\\\Final-Year-Project\\\\Client\\\\ecommerce-2nd\\\\src\\\\Pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const usernameRef = useRef(null);\n  const passwordRef = useRef(null);\n  console.log(usernameRef, passwordRef);\n  const handleLogin = () => {\n    const username = usernameRef.current.value;\n    const password = passwordRef.current.value;\n\n    // Perform login logic here\n    console.log(`Logging in with username: ${username} and password: ${password}`);\n    // Additional logic like API calls, authentication, etc.\n\n    // Clear input fields after login\n    usernameRef.current.value = '';\n    passwordRef.current.value = '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: usernameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ref: passwordRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"JADMUxbcoD3pQqmQ82qhQ7Y8Qik=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Login","_s","usernameRef","passwordRef","console","log","handleLogin","username","current","value","password","children","type","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Tai Lieu Cac Mon/New folder/Final-Year-Project/Client/ecommerce-2nd/src/Pages/Login.jsx"],"sourcesContent":["import React, { useRef } from 'react';\r\n\r\nconst Login = () => {\r\n  const usernameRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  console.log(usernameRef, passwordRef);\r\n\r\n  const handleLogin = () => {\r\n    const username = usernameRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    // Perform login logic here\r\n    console.log(`Logging in with username: ${username} and password: ${password}`);\r\n    // Additional logic like API calls, authentication, etc.\r\n\r\n    // Clear input fields after login\r\n    usernameRef.current.value = '';\r\n    passwordRef.current.value = '';\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        Username:\r\n        <input type=\"text\" ref={usernameRef} />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Password:\r\n        <input type=\"password\" ref={passwordRef} />\r\n      </label>\r\n      <br />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,WAAW,GAAGL,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMM,WAAW,GAAGN,MAAM,CAAC,IAAI,CAAC;EAEhCO,OAAO,CAACC,GAAG,CAACH,WAAW,EAAEC,WAAW,CAAC;EAErC,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGL,WAAW,CAACM,OAAO,CAACC,KAAK;IAC1C,MAAMC,QAAQ,GAAGP,WAAW,CAACK,OAAO,CAACC,KAAK;;IAE1C;IACAL,OAAO,CAACC,GAAG,CAAE,6BAA4BE,QAAS,kBAAiBG,QAAS,EAAC,CAAC;IAC9E;;IAEA;IACAR,WAAW,CAACM,OAAO,CAACC,KAAK,GAAG,EAAE;IAC9BN,WAAW,CAACK,OAAO,CAACC,KAAK,GAAG,EAAE;EAChC,CAAC;EAED,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,GAAO,WAEL,eAAAZ,OAAA;QAAOa,IAAI,EAAC,MAAM;QAACC,GAAG,EAAEX;MAAY;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACRlB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNlB,OAAA;MAAAY,QAAA,GAAO,WAEL,eAAAZ,OAAA;QAAOa,IAAI,EAAC,UAAU;QAACC,GAAG,EAAEV;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACRlB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNlB,OAAA;MAAQmB,OAAO,EAAEZ,WAAY;MAAAK,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAlCID,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAoCX,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}